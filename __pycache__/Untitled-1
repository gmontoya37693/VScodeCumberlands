# -----------------------------------
# Step 4: Compare ExtraTreesRegressor with Reduced Feature Set
# -----------------------------------
"""
Compare model performance using all relevant variables vs. a reduced set:
- Reduced set: Reg_year, Engin_size, Runned_Miles, Genmodel
- Show RÂ² scores and RMSE for both models in a table.
"""

from sklearn.metrics import mean_squared_error

# 1. Full feature set (already fitted above)
y_pred_full = etr.predict(X_test)
r2_full = etr.score(X_test, y_test)
rmse_full = mean_squared_error(y_test, y_pred_full, squared=False)

# 2. Reduced feature set
features_reduced = ['Reg_year', 'Engin_size', 'Runned_Miles', 'Genmodel']
X_reduced = df_filtered[features_reduced]
y_reduced = df_filtered[target]

# Encode Genmodel and Runned_Miles if needed
X_reduced_encoded = pd.get_dummies(X_reduced, columns=['Genmodel'], drop_first=True)
# If Runned_Miles is not numeric, convert it
if X_reduced_encoded['Runned_Miles'].dtype == 'object':
    X_reduced_encoded['Runned_Miles'] = pd.to_numeric(X_reduced_encoded['Runned_Miles'], errors='coerce')

X_train_r, X_test_r, y_train_r, y_test_r = train_test_split(X_reduced_encoded, y_reduced, test_size=0.2, random_state=42)
etr_reduced = ExtraTreesRegressor(n_estimators=100, random_state=42)
etr_reduced.fit(X_train_r, y_train_r)
y_pred_reduced = etr_reduced.predict(X_test_r)
r2_reduced = etr_reduced.score(X_test_r, y_test_r)
rmse_reduced = mean_squared_error(y_test_r, y_pred_reduced, squared=False)

# 3. Compare results in a table
results = pd.DataFrame({
    'Model': ['All Relevant Variables', 'Reduced Set (Reg_year, Engin_size, Runned_Miles, Genmodel)'],
    'R2 Score': [r2_full, r2_reduced],
    'RMSE': [rmse_full, rmse_reduced]
})

print("\nModel Comparison Table:")
print(results.to_string(index=False))